import { Injectable } from '@angular/core';

export interface Language {
  code: string;
  name: string;
  flag: string;
  flagImage: string; // Add this new property
}

export interface LearningContent {
  words: { [key: string]: string };
  numbers: { [key: string]: string };
  sentences: { [key: string]: string };
}

@Injectable({
  providedIn: 'root',
})
export class LanguageService {
  private languages: Language[] = [
    {
      code: 'ru',
      name: 'Russian',
      flag: 'üá∑üá∫',
      flagImage: '/assets/flags/ru.png',
    },
  ];

  private content: { [key: string]: LearningContent } = {
    hi: {
      words: {
        // Essential Nouns
        water: '‡§™‡§æ‡§®‡•Ä (paani)',
        food: '‡§ñ‡§æ‡§®‡§æ (khaana)',
        restaurant: '‡§∞‡•á‡§∏‡•ç‡§§‡§∞‡§æ‡§Ç (restoraan)',
        bathroom: '‡§∂‡•å‡§ö‡§æ‡§≤‡§Ø (shauchalay)',
        hospital: '‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤ (aspatal)',
        hotel: '‡§π‡•ã‡§ü‡§≤ (hotel)',
        airport: '‡§π‡§µ‡§æ‡§à ‡§Ö‡§°‡•ç‡§°‡§æ (havai adda)',
        train: '‡§∞‡•á‡§≤‡§ó‡§æ‡§°‡§º‡•Ä (relgaadi)',
        bus: '‡§¨‡§∏ (bas)',
        taxi: '‡§ü‡•à‡§ï‡•ç‡§∏‡•Ä (taxi)',
        // Common Adjectives
        good: '‡§Ö‡§ö‡•ç‡§õ‡§æ (accha)',
        bad: '‡§¨‡•Å‡§∞‡§æ (bura)',
        big: '‡§¨‡§°‡§º‡§æ (bada)',
        small: '‡§õ‡•ã‡§ü‡§æ (chota)',
        hot: '‡§ó‡§∞‡§Æ (garam)',
        cold: '‡§†‡§Ç‡§°‡§æ (thanda)',
        // Essential Verbs
        'to eat': '‡§ñ‡§æ‡§®‡§æ (khaana)',
        'to drink': '‡§™‡•Ä‡§®‡§æ (peena)',
        'to sleep': '‡§∏‡•ã‡§®‡§æ (sona)',
        'to go': '‡§ú‡§æ‡§®‡§æ (jaana)',
        'to help': '‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡§æ (madad karna)',
        thanks: '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ (dhanyavaad)',
      },
      numbers: {
        '0': '‡§∂‡•Ç‡§®‡•ç‡§Ø (shunya)',
        '1': '‡§è‡§ï (ek)',
        '2': '‡§¶‡•ã (do)',
        '3': '‡§§‡•Ä‡§® (teen)',
        '4': '‡§ö‡§æ‡§∞ (chaar)',
        '5': '‡§™‡§æ‡§Å‡§ö (paanch)',
        '6': '‡§õ‡§π (chah)',
        '7': '‡§∏‡§æ‡§§ (saat)',
        '8': '‡§Ü‡§† (aath)',
        '9': '‡§®‡•å (nau)',
        '10': '‡§¶‡§∏ (das)',
        '20': '‡§¨‡•Ä‡§∏ (bees)',
        '30': '‡§§‡•Ä‡§∏ (tees)',
        '40': '‡§ö‡§æ‡§≤‡•Ä‡§∏ (chalees)',
        '50': '‡§™‡§ö‡§æ‡§∏ (pachaas)',
        '100': '‡§∏‡•å (sau)',
        '1000': '‡§π‡§ú‡§º‡§æ‡§∞ (hazaar)',
      },
      sentences: {
        // Greetings
        Hello: '‡§®‡§Æ‡§∏‡•ç‡§§‡•á (namaste)',
        'Good morning': '‡§∏‡•Å‡§™‡•ç‡§∞‡§≠‡§æ‡§§ (suprabhat)',
        'Good afternoon': '‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞ (namaskar)',
        'Good night': '‡§∂‡•Å‡§≠ ‡§∞‡§æ‡§§‡•ç‡§∞‡§ø (shubh ratri)',
        Goodbye: '‡§Ö‡§≤‡§µ‡§ø‡§¶‡§æ (alvida)',
        // Essential Phrases
        'How are you?': '‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç? (aap kaise hain?)',
        'I am fine': '‡§Æ‡•à‡§Ç ‡§†‡•Ä‡§ï ‡§π‡•Ç‡§Ç (main theek hoon)',
        'Thank you': '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶ (dhanyavaad)',
        "You're welcome": '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à (swaagat hai)',
        Please: '‡§ï‡•É‡§™‡§Ø‡§æ (kripya)',
        'Excuse me': '‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§ï‡•Ä‡§ú‡§ø‡§è (kshama keejiye)',
        "I'm sorry": '‡§Æ‡•Å‡§ù‡•á ‡§ñ‡•á‡§¶ ‡§π‡•à (mujhe khed hai)',
        // Emergency Phrases
        'I need help': '‡§Æ‡•Å‡§ù‡•á ‡§Æ‡§¶‡§¶ ‡§ö‡§æ‡§π‡§ø‡§è (mujhe madad chahiye)',
        'I am lost': '‡§Æ‡•à‡§Ç ‡§ñ‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•Ç‡§Ç (main kho gaya hoon)',
        "I don't understand": '‡§Æ‡•à‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§Æ‡§ù‡§§‡§æ (main nahi samajhta)',
        'Do you speak English?':
          '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡§º‡•Ä ‡§¨‡•ã‡§≤‡§§‡•á ‡§π‡•à‡§Ç? (kya aap angrezi bolte hain?)',
        'Where is the bathroom?': '‡§¨‡§æ‡§•‡§∞‡•Ç‡§Æ ‡§ï‡§π‡§æ‡§Å ‡§π‡•à? (bathroom kahan hai?)',
        // Practical Phrases
        'How much does it cost?': '‡§Ø‡§π ‡§ï‡§ø‡§§‡§®‡•á ‡§ï‡§æ ‡§π‡•à? (yeh kitne ka hai?)',
        'Can you help me?':
          '‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Æ‡•á‡§∞‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç? (kya aap meri madad kar sakte hain?)',
        'I would like...': '‡§Æ‡•à‡§Ç ‡§ö‡§æ‡§π‡•Ç‡§Ç‡§ó‡§æ... (main chahunga...)',
        'The check, please': '‡§¨‡§ø‡§≤ ‡§≤‡§æ‡§á‡§è (bill laiye)',
      },
    },
  };

  getLanguages(): Language[] {
    return this.languages;
  }

  getContent(languageCode: string): LearningContent | undefined {
    return this.content[languageCode];
  }
}
